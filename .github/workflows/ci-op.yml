name: CI-operators

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: 
  # Trigger the workflow on push to master or pull request
  # to be merged in master
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: ${{ matrix.op }} on Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      DEVITO_ARCH: ${{ matrix.cc }}
      DEVITO_LANGUAGE: "openmp"
      DEVITO_LOGGING: "INFO"
      OMP_NUM_THREADS: ${{ matrix.omp }}
      JULIA_NUM_THREADS: 1
      GROUP: ${{ matrix.op }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        op: ["ISO_OP", "ISO_OP_FS", "TTI_OP", "TTI_OP_FS", "BASICS"]
        version: ['1']
        omp: [2]
        cc: ['gcc']
        arch: ['x64']
  
        include:
          - os: macos-15
            version: '1'
            op: "ISO_OP"
            omp: 1
            cc: clang
            arch: ARM64

          - os: macos-15
            version: 'lts'
            op: "ISO_OP"
            omp: 1
            cc: clang
            arch: ARM64

          - os: macos-15
            version: '1'
            op: "ISO_OP"
            omp: 1
            cc: clang
            arch: ARM64

          - os: ubuntu-latest
            version: '1'
            op: "VISCO_AC_OP"
            omp: 2
            cc: gcc
            arch: x64

          - os: ubuntu-latest
            version: '1'
            op: "ISO_OP"
            omp: 2
            cc: gcc
            arch: x64

    steps:
      - name: Checkout JUDI
        uses: actions/checkout@v4

      - name: Setup julia
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - uses: julia-actions/cache@v2

      - name: Setup clang for osx
        if: runner.os == 'macOS'
        run: |
          brew install llvm libomp
          echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Set julia python
        run: |
          echo "PYTHON=$(which python3)" >> $GITHUB_ENV
          echo "PYCALL_JL_RUNTIME_PYTHON=$(which python3)" >> $GITHUB_ENV
          echo "JULIA_PYTHONCALL_EXE=$(which python3)" >> $GITHUB_ENV
          echo "JULIA_CONDAPKG_BACKEND=Null" >> $GITHUB_ENV

      - name: Build JUDI
        uses: julia-actions/julia-buildpkg@latest

      - name: Run tests
        uses: julia-actions/julia-runtest@latest
        with:
          annotate: true

      - uses: julia-actions/julia-processcoverage@v1

      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
